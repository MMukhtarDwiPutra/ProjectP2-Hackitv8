definitions:
  entity.BalanceRequest:
    properties:
      top_up_balance:
        type: number
      user_id:
        type: integer
    required:
    - top_up_balance
    - user_id
    type: object
  entity.BookingRequest:
    properties:
      date_in:
        type: string
      date_out:
        type: string
      room_id:
        type: integer
      user_id:
        type: integer
    required:
    - date_in
    - date_out
    - room_id
    type: object
  entity.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  entity.RegisterRequest:
    properties:
      balance:
        type: number
      email:
        type: string
      full_name:
        type: string
      password:
        type: string
    required:
    - email
    - full_name
    - password
    type: object
  entity.UserResponse:
    properties:
      balance:
        type: number
      email:
        type: string
      full_name:
        type: string
      user_id:
        type: integer
    type: object
  entity.WebhookPayload:
    properties:
      adjusted_received_amount:
        type: number
      amount:
        type: number
      bank_code:
        type: string
      created:
        type: string
      currency:
        type: string
      description:
        type: string
      external_id:
        type: string
      fees_paid_amount:
        type: number
      id:
        type: string
      is_high:
        type: boolean
      merchant_name:
        type: string
      paid_amount:
        type: number
      paid_at:
        type: string
      payer_email:
        type: string
      payment_channel:
        type: string
      payment_destination:
        type: string
      payment_method:
        type: string
      status:
        type: string
      updated:
        type: string
      user_id:
        type: string
    type: object
info:
  contact: {}
paths:
  /booking:
    post:
      consumes:
      - application/json
      description: Books a room for a user, requiring down payment based on the room
        price and user's balance.
      parameters:
      - description: Booking Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.BookingRequest'
      - description: 'Bearer Token (Example: ''Bearer <your_token>'')'
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Booking created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request parameters
          schema:
            additionalProperties: true
            type: object
        "402":
          description: Insufficient balance
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Room or User not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Book a room
      tags:
      - Booking
  /booking/report:
    get:
      description: Retrieves all bookings made by a specific user.
      parameters:
      - description: 'Bearer Token (Example: ''Bearer <your_token>'')'
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Booking report retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "401":
          description: User not authorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Get booking report for a user
      tags:
      - Booking
  /confirm:
    get:
      consumes:
      - application/json
      description: Handles account activation via a confirmation token passed in the
        query string. It activates the user's account.
      parameters:
      - description: Confirmation Token
        in: query
        name: token
        required: true
        type: string
      produces:
      - text/html
      responses:
        "200":
          description: Account successfully activated
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Token is missing
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Invalid or expired token
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Confirm user account activation
      tags:
      - User
  /invoice_webhook_url:
    post:
      consumes:
      - application/json
      description: Processes the webhook sent by Xendit for invoice updates (e.g.,
        PAID, EXPIRED).
      parameters:
      - description: Xendit Callback Token
        in: header
        name: x-callback-token
        required: true
        type: string
      - description: Webhook Payload
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/entity.WebhookPayload'
      - description: 'Bearer Token (Example: ''Bearer <your_token>'')'
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "400":
          description: Bad Request - Failed to parse JSON
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized - Invalid callback token
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Handles Invoice Webhook from Xendit
      tags:
      - Webhook
  /login:
    post:
      consumes:
      - application/json
      description: Authenticates a user by email and password, and returns a JWT token.
      parameters:
      - description: Login Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User successfully logged in
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Invalid email or password
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: User login
      tags:
      - User
  /register:
    post:
      consumes:
      - application/json
      description: Registers a user by providing their email, full name, and password.
        A confirmation email will be sent to the provided email address.
      parameters:
      - description: Register Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User successfully registered
          schema:
            $ref: '#/definitions/entity.UserResponse'
        "400":
          description: Invalid request parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Email already registered
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - User
  /rooms:
    get:
      description: Retrieves a list of all available rooms.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully fetched all rooms
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get all rooms
      tags:
      - Room
  /top-up:
    post:
      consumes:
      - application/json
      description: Top up the balance of a user by providing a `BalanceRequest` object
        which includes the amount to be added to the balance.
      parameters:
      - description: Top Up Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/entity.BalanceRequest'
      - description: 'Bearer Token (Example: ''Bearer <your_token>'')'
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Balance successfully topped up
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request parameters
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized - Invalid user ID
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Top up user balance
      tags:
      - Saldo
  /user-info:
    get:
      consumes:
      - application/json
      description: Retrieves user information such as email, full name, and balance
        by user ID.
      parameters:
      - description: 'Bearer Token (Example: ''Bearer <your_token>'')'
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User information retrieved successfully
          schema:
            $ref: '#/definitions/entity.UserResponse'
        "401":
          description: Unauthorized - User not authenticated
          schema:
            additionalProperties: true
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Get user information
      tags:
      - User
swagger: "2.0"
